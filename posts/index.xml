<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - YakuShou's NOTEBOOK</title><link>https://yakushou.life/posts/</link><description>All Posts | YakuShou's NOTEBOOK</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Nov 2021 18:24:37 +0800</lastBuildDate><atom:link href="https://yakushou.life/posts/" rel="self" type="application/rss+xml"/><item><title>SOLID - Single Responsibility Principle</title><link>https://yakushou.life/posts/solid-single-responsibility-principle/</link><pubDate>Wed, 10 Nov 2021 18:24:37 +0800</pubDate><author><name>yakushou730</name><uri>https://github.com/yakushou730</uri><email>yakushou730@gmail.com</email></author><guid>https://yakushou.life/posts/solid-single-responsibility-principle/</guid><description>SOLID 是軟體開發的準則
分別代表
Single Responsibility Principle (SRP - 單一職責原則) Open-Closed Principle (OCP - 開放封閉原則) Liskov Substitution Principle (LSP - Liskov替換原則) Interface Segregation Principle (ISP - 介面隔離原則) Dependency Inversion Principle (DIP - 依賴反轉原則) 本篇是簡單整理 SRP 的內容
SRP 的定義是單一職責，類別內只做單一的事情
即如果有要改動這個類別的話，只會有一個原因
不會有多數需求要修改到這個類別
舉例來說 一個 Journey 類別，裡面可以 新增/移除 複數個觀光景點
則這個類別的職責就是只要負責記錄觀光景點就好
假設今天需要一個功能是產生報表
或許直接加方法在這個類別可以簡單的實作
但卻破壞了 SRP 原則，這個時候就應該要把產生報表的行為移到另一個類別來負責
引入的參數可以是這個 Journey 物件
讓這個 Journey 類別只負責記錄觀光景點，不多做不相干的事情
參考資料 SOLID 之 單一職責原則（Single responsibility principle）</description></item><item><title>English Dictionary</title><link>https://yakushou.life/posts/en-dictionary/</link><pubDate>Wed, 10 Nov 2021 12:39:12 +0800</pubDate><author><name>yakushou730</name><uri>https://github.com/yakushou730</uri><email>yakushou730@gmail.com</email></author><guid>https://yakushou.life/posts/en-dictionary/</guid><description>underscore 底線符號 _
asterisk 星星符號 *
hash mark 井字號 #
plus 加號 +
hyphen 減號 -
periods 點 .
backtick 上方小頓號 `
ampersand 和的符號 &amp;amp;
angle bracket 尖的括號 &amp;lt; 或 &amp;gt;</description></item><item><title>Markdown 基本教學</title><link>https://yakushou.life/posts/markdown-tutorial/</link><pubDate>Wed, 10 Nov 2021 12:34:12 +0800</pubDate><author><name>yakushou730</name><uri>https://github.com/yakushou730</uri><email>yakushou730@gmail.com</email></author><guid>https://yakushou.life/posts/markdown-tutorial/</guid><description>斜體字 用底線 (underscore) 把要轉斜體字的字串夾起來 _TARGET_
結果: TARGET
粗體字 用兩個星星符號 (asterisk) 把要轉斜體字的字串夾起來 **TARGET**
結果: TARGET
標題 標題分成六種大小 在標題文字前面加上井字號 (hash mark)
井字號越少代表越大
# TARGET ## TARGET ### TARGET #### TARGET ##### TARGET ###### TARGET TARGET TARGET TARGET TARGET TARGET TARGET 或是加上 - 或 = 也可以表示標題
TARGET ====== TARGET ------ TARGET TARGET 連結 連結的格式為中括號內放文字，小括號內放連結 [TARGET DESCRIPTION](TARGET LINK)
結果: TARGET DESCRIPTION
無序條列 利用 + 或 - 或 * 來做無序條列
- TARGET1 - TARGET2 second line - TARGET3 TARGET1</description></item><item><title>Hugo 基本建立教學</title><link>https://yakushou.life/posts/hugo-tutorial/</link><pubDate>Wed, 10 Nov 2021 10:48:27 +0800</pubDate><author><name>yakushou730</name><uri>https://github.com/yakushou730</uri><email>yakushou730@gmail.com</email></author><guid>https://yakushou.life/posts/hugo-tutorial/</guid><description>流程 以下為使用 Hugo 架部落格，並架在 github page 上
我的電腦是使用 macOS，會需要透過 homebrew 來安裝需要用到的套件
git: 檔案版本控管 gvm: golang 的版本控管，用來安裝 golang hugo: hugo cli 用來下對應的 hugo 指令 使用 hugo 指令初始化一個新的網站 hugo-blog
並且初始化 git
$ hugo new site hugo-blog $ cd hugo-blog $ git init 搭配 DoIt 主題作為顯示，以 submodule 加入至主題 $ git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt 再來是設置 config.toml 以下是 範例，參考用 baseURL = &amp;quot;http://example.org/&amp;quot; # [en, zh-cn, fr, .</description></item></channel></rss>